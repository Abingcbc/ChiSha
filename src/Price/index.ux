<import name="my-button" src="apex-ui/components/button/index"></import>
<import name="my-tabbar" src="apex-ui/components/tabbar/index"></import>
<import name="my-search-bar" src="apex-ui/components/search-bar/index"></import>
<import name="my-card" src="apex-ui/components/card/index"></import>

<template>
  <!-- template里只能有一个根节点 -->
  <div class="page">
    <text class="title">今日菜价</text>
    <div ontouchend="gotoSearch">
      <my-search-bar disabled="{{true}}" input-value="{{search_text}}" onchange="searchInput" placeholder="搜索食材名"></my-search-bar>
    </div>
    <list class="tutorial-page" onscrollbottom="loadMoreData">
      <block for="{{view_list}}">
        <list-item type="card" class="tutorial-page">
          <my-card title="{{$item.name}}" thumb="{{$item.url}}" extra="今日价格：￥{{$item.price}}">
            <text>{{search_text}}</text>
          </my-card>
        </list-item>
      </block>
    </list>
    <my-tabbar tabbar="{{tabbarData}}"></my-tabbar>
    </div>
</template>

<script>
import router from '@system.router'

export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    title: 'what-to-eat',
    tabbarData: [
      {
        pagePath: '/Price',
        text: '今日菜价',
        active: true
      },
      {
        pagePath: '/Menu',
        text: '菜谱推荐',
        active: false
      },
      {
        pagePath: '/Advertisement',
        text: '农商直销',
        active: false
      }, 
      {
        pagePath: '/UserInfo',
        text: '个人信息',
        active: false
      },        
    ],
    ingredient_list:[],
    view_list:[],
    search_text:'',
    isFixed:false
  },
  onInit() {
    for(var i=0;i<10;++i){
      this.ingredient_list.push({
        name: '猪肉',
        description: 'pork is a kind of meat',
        url:'/Common/pork.png',
        price: '21'
      })
      this.view_list=this.ingredient_list
    }
  },
  onReady() {
    var header=this.$element('searchBar')
  },
  routeDetail () {
    // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
    router.push ({
      uri: '/Advertisement'
    })
  },
  searchInput(e){
    this.search_text=e.detail.event.value
    this.view_list=[]
    if(this.search_text===''||this.search_text===undefined) {
      this.view_list=this.ingredient_list
    }
    else {
      for(var item in this.ingredient_list){
        if(this.ingredient_list[item].name.indexOf(this.search_text)!==-1) {

          this.view_list.push(this.ingredient_list[item])
        }
      }
    }
  },
  gotoSearch() {
    router.push({
      uri: '/SearchMaterial'
    })
  }
}
</script>

<style>

  .wrap1 {
    flex-direction: column;
    background-color: #f8f8f9;
  }

  .page {
    flex-direction: column;
  }

  .title {
    font-size: 40px;
    text-align: center;
    padding: 40px 20px 15px;
    color: #ffffff;
    font-weight: bolder;
    background-color: #09ba07;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }
  .tutorial-page {
    width: 100%;
    flex-direction: column;
    background-color: #f8f8f9;
  }

  .background {
    background-color: #f8f8f9;
    flex-direction: column;
  }

  .headerFixed{
	position: fixed;
	top:0px;
	left:0px;
	right:0px;
  }	
</style>
