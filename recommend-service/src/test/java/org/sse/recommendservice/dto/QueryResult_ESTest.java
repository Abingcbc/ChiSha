/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 27 09:09:06 GMT 2019
 */

package org.sse.recommendservice.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sse.recommendservice.dto.QueryResult;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryResult_ESTest extends QueryResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      boolean boolean0 = queryResult0.equals(queryResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      queryResult0.setValue("QueryResult(id=");
      String string0 = queryResult0.getValue();
      assertEquals("QueryResult(id=", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      queryResult0.setValue("");
      String string0 = queryResult0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = new Long(0L);
      queryResult0.setId(long0);
      Long long1 = queryResult0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = new Long((-2816L));
      queryResult0.setId(long0);
      Long long1 = queryResult0.getId();
      assertEquals((-2816L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = new Long((-141L));
      queryResult0.setId(long0);
      Long long1 = queryResult0.getId();
      assertEquals((-141L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = new Long(1209L);
      queryResult0.setId(long0);
      Long long1 = queryResult0.getId();
      assertEquals(1209L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      boolean boolean0 = queryResult0.canEqual(queryResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Object object0 = new Object();
      boolean boolean0 = queryResult0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      String string0 = queryResult0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = queryResult0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      queryResult0.setValue("");
      assertFalse(queryResult0.equals((Object)queryResult1));
      
      queryResult1.setValue("");
      boolean boolean0 = queryResult1.equals(queryResult0);
      assertTrue(queryResult1.equals((Object)queryResult0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      assertTrue(queryResult1.equals((Object)queryResult0));
      
      queryResult1.setValue("");
      boolean boolean0 = queryResult1.equals(queryResult0);
      assertFalse(queryResult1.equals((Object)queryResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      Long long0 = new Long((-2822L));
      queryResult1.setId(long0);
      assertFalse(queryResult1.equals((Object)queryResult0));
      
      queryResult0.setId(long0);
      boolean boolean0 = queryResult1.equals(queryResult0);
      assertTrue(queryResult0.equals((Object)queryResult1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      assertTrue(queryResult1.equals((Object)queryResult0));
      
      Long long0 = new Long((-3L));
      queryResult1.setId(long0);
      boolean boolean0 = queryResult0.equals(queryResult1);
      assertFalse(queryResult1.equals((Object)queryResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      assertTrue(queryResult1.equals((Object)queryResult0));
      
      Long long0 = new Long((-2822L));
      queryResult1.setId(long0);
      boolean boolean0 = queryResult1.equals(queryResult0);
      assertFalse(queryResult1.equals((Object)queryResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Object object0 = new Object();
      boolean boolean0 = queryResult0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      QueryResult queryResult1 = new QueryResult();
      assertTrue(queryResult1.equals((Object)queryResult0));
      
      queryResult1.setValue("QueryResult(id=null, value=null)");
      boolean boolean0 = queryResult0.equals(queryResult1);
      assertFalse(queryResult1.equals((Object)queryResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      queryResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      Long long0 = new Long((-2822L));
      queryResult0.setId(long0);
      queryResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      queryResult0.setValue("");
      queryResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QueryResult queryResult0 = new QueryResult();
      String string0 = queryResult0.toString();
      assertEquals("QueryResult(id=null, value=null)", string0);
  }
}
