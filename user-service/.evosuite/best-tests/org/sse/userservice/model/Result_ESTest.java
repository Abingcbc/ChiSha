/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 25 15:30:47 GMT 2019
 */

package org.sse.userservice.model;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sse.userservice.model.Result;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Result_ESTest extends Result_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Result result0 = new Result((-1782), "#Lf-h");
      Result result1 = new Result(1341, "#Lf-h");
      boolean boolean0 = result0.equals(result1);
      assertEquals(1341, result1.getCode());
      assertFalse(result1.equals((Object)result0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Result result0 = new Result((-2360), (String) null);
      boolean boolean0 = result0.equals(result0);
      assertTrue(boolean0);
      assertEquals((-2360), result0.getCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Result result0 = new Result(0, (String) null);
      result0.getMsg();
      assertEquals(0, result0.getCode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Result result0 = new Result((-1), "");
      result0.getMsg();
      assertEquals((-1), result0.getCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Result result0 = new Result(1, "= wx");
      int int0 = result0.getCode();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Result result0 = new Result((-1782), "#Lf-h");
      int int0 = result0.getCode();
      assertEquals((-1782), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Result result0 = new Result((-1782), "#Lf-h");
      result0.canEqual(result0);
      assertEquals((-1782), result0.getCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Result result0 = new Result(1, "= wx");
      result0.canEqual("}~X)AZ|UjTc$a}&K");
      assertEquals(1, result0.getCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Result result0 = new Result(0, "Result(code=");
      result0.getMsg();
      assertEquals(0, result0.getCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Result result0 = new Result(0, "Result(code=");
      int int0 = result0.getCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Result result0 = new Result(330, "[87B4L");
      Result result1 = new Result(330, "[87B4L");
      boolean boolean0 = result0.equals(result1);
      assertTrue(boolean0);
      assertEquals(330, result1.getCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Result result0 = new Result(73, (String) null);
      Result result1 = new Result(73, "Result(code=73, msg=null)");
      boolean boolean0 = result0.equals(result1);
      assertEquals(73, result1.getCode());
      assertFalse(boolean0);
      assertFalse(result1.equals((Object)result0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Result result0 = new Result(41, ", msg=");
      Result result1 = new Result(41, ", msg=");
      result1.setCode((-2407));
      boolean boolean0 = result0.equals(result1);
      assertEquals((-2407), result1.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Result result0 = new Result(0, (String) null);
      boolean boolean0 = result0.equals("Result(code=0, msg=)");
      assertEquals(0, result0.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Result result0 = new Result(0, (String) null);
      result0.hashCode();
      assertEquals(0, result0.getCode());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Result result0 = new Result(41, ", msg=");
      result0.hashCode();
      assertEquals(41, result0.getCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Result result0 = new Result((-2360), (String) null);
      Result result1 = new Result((-2360), (String) null);
      boolean boolean0 = result0.equals(result1);
      assertTrue(boolean0);
      assertEquals((-2360), result1.getCode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Result result0 = new Result((-2360), (String) null);
      result0.setMsg("Result(code=-2360, msg=null)");
      Result result1 = new Result((-2360), (String) null);
      boolean boolean0 = result0.equals(result1);
      assertEquals((-2360), result1.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Result result0 = new Result((-2360), (String) null);
      String string0 = result0.toString();
      assertEquals("Result(code=-2360, msg=null)", string0);
  }
}
