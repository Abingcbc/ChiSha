/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 26 02:56:17 GMT 2019
 */

package org.sse.userservice.model;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sse.userservice.model.User;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      user0.setUserId((-854L));
      user0.hashCode();
      assertEquals((-854L), user0.getUserId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      user0.setUserId((-2219L));
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertEquals((-2219L), user0.getUserId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.equals(user0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      user0.setUserId(2840L);
      long long0 = user0.getUserId();
      assertEquals(2840L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      user0.setUserId((-286L));
      long long0 = user0.getUserId();
      assertEquals((-286L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setPhone("sV,%K$td");
      String string0 = user0.getPhone();
      assertEquals("sV,%K$td", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      user0.setPhone("");
      String string0 = user0.getPhone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("IuMY0.-eeBA.=U0vm@");
      String string0 = user0.getPassword();
      assertEquals("IuMY0.-eeBA.=U0vm@", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      user0.setNickname("-*v");
      String string0 = user0.getNickname();
      assertEquals("-*v", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User();
      user0.setNickname("");
      String string0 = user0.getNickname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setIsAuthorized("-*v");
      String string0 = user0.getIsAuthorized();
      assertEquals("-*v", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      user0.setIsAuthorized("");
      String string0 = user0.getIsAuthorized();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      user0.setGender(4757L);
      long long0 = user0.getGender();
      assertEquals(4757L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      user0.setGender((-2550L));
      long long0 = user0.getGender();
      assertEquals((-2550L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("`#%DFx");
      String string0 = user0.getEmail();
      assertEquals("`#%DFx", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      String string0 = user0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      user0.setBornPlace("m@C");
      String string0 = user0.getBornPlace();
      assertEquals("m@C", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      user0.setBornPlace("");
      String string0 = user0.getBornPlace();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      user0.setAge(874L);
      long long0 = user0.getAge();
      assertEquals(874L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      user0.setAge((-2306L));
      long long0 = user0.getAge();
      assertEquals((-2306L), long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.canEqual(user0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User();
      Object object0 = new Object();
      boolean boolean0 = user0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User();
      long long0 = user0.getGender();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getIsAuthorized();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      User user0 = new User();
      long long0 = user0.getAge();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User();
      long long0 = user0.getUserId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getBornPlace();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getPhone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("o");
      User user1 = new User();
      user1.setBornPlace("o");
      user1.setPassword("o");
      user0.setBornPlace("o");
      user0.setAge(2898L);
      boolean boolean0 = user0.equals(user1);
      assertEquals(2898L, user0.getAge());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      User user0 = new User();
      user0.setBornPlace("");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setBornPlace("");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      User user0 = new User();
      user0.setIsAuthorized("");
      User user1 = new User();
      user1.setEmail("");
      user1.setBornPlace("");
      user0.setEmail("");
      user1.setIsAuthorized("");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      User user0 = new User();
      user0.setBornPlace("");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("o");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setPassword("o");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("User(userId=0, nickname=null, phone=null, email=null, isAuthorized=null, gender=0, password=null, bornPlace=null, age=0)");
      User user1 = new User();
      boolean boolean0 = user1.equals(user0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("User(userId=0, nickname=null, phone=null, email=null, isAuthorized=null, gender=0, password=null, bornPlace=null, age=0)");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User();
      user0.setNickname("");
      User user1 = new User();
      user1.setGender((-2550L));
      user1.setNickname("");
      boolean boolean0 = user0.equals(user1);
      assertEquals((-2550L), user1.getGender());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user1.setIsAuthorized("wY3%c -mx5\"FDlXa(G");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      User user0 = new User();
      user0.setIsAuthorized("");
      User user1 = new User();
      user1.setEmail("");
      user0.setEmail("");
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user1.setEmail("w");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("jM0#i9{=");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      User user0 = new User();
      user0.setPhone(", nickn@me=");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setPhone(", nickn@me=");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user0.setPhone("");
      boolean boolean0 = user1.equals(user0);
      assertFalse(user0.equals((Object)user1));
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      User user0 = new User();
      user0.setPhone("|Fg]");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      User user0 = new User();
      user0.setNickname("+4^}VNhKxxzX");
      User user1 = new User();
      boolean boolean0 = user1.equals(user0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      User user0 = new User();
      user0.setUserId(1L);
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertEquals(1L, user0.getUserId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("User(userId=0, nickname=null, phone=null, email=null, isAuthorized=null, gender=0, password=null, bornPlace=null, age=0)");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      User user0 = new User();
      user0.setIsAuthorized("User(userId=0, nickname=null, phone=null, email=null, isAuthorized=null, gender=0, password=null, bornPlace=null, age=0)");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      User user0 = new User();
      user0.setNickname(", nickname=");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      String string0 = user0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.toString();
      assertEquals("User(userId=0, nickname=null, phone=null, email=null, isAuthorized=null, gender=0, password=null, bornPlace=null, age=0)", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      User user0 = new User();
      user0.setBornPlace("");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      User user0 = new User();
      user0.setPhone("");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      User user0 = new User();
      user0.setEmail(", nickname=");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      User user0 = new User();
      user0.setNickname("");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }
}
